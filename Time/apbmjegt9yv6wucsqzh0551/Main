package com.time.gyzer;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;

import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

public class Main extends JavaPlugin implements Listener{

	
	public void onEnable()
	{
		Bukkit.getPluginManager().registerEvents(this, this);
		File file=new File("./plugins/Time","config.yml");
		if (!file.exists())
		{
			saveResource("config.yml", true);
		} 
		new BukkitRunnable() {
			
			@Override
			public void run() {
				// TODO 自动生成的方法存根
				for (Player p:Bukkit.getOnlinePlayers())
				{
					File file=new File("./plugins/Time/data",p.getName()+".yml");
					YamlConfiguration yml=YamlConfiguration.loadConfiguration(file);
					yml.set("在线时间", yml.getInt("在线时间")+1);
					try {
						yml.save(file);
					} catch (IOException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}
					
					
				}
			}
		}.runTaskTimer(this, 20L, 20L);
		
		
	}
	
	public boolean onCommand(CommandSender sender,Command cmd,String label,String[] args)
	{
		if (cmd.getName().equals("time"))
		{
			
			openInv((Player)sender);
			
		}
		
		return true;
	}
	
	public static void openInv(Player p)
	{
		
		File file=new File("./plugins/Time/data",p.getName()+".yml");
		YamlConfiguration yml=YamlConfiguration.loadConfiguration(file);
		Inventory inv=Bukkit.createInventory(p, 54, "§d§l你的在线时间: §e"+yml.getInt("在线时间")/60+"分");
		int time=yml.getInt("在线时间"); 
		 
		for (int slot=0;slot<=54;slot++)
		{
			 
			
			ConfigurationSection sec=getconfig().getConfigurationSection("礼包");
			Set<String> k=sec.getKeys(false);
			for (String s:k)
			{
				if (slot==Integer.parseInt(s))
				{ 
					int need=getconfig().getInt("礼包."+s+".need")*60;
					ItemStack i = new ItemStack(1);
					ItemMeta id=i.getItemMeta();
					id.setDisplayName(getconfig().getString("礼包."+s+".name").replace("&", "§")); 
					ArrayList l=new ArrayList();
					for (String lore:getconfig().getStringList("礼包."+s+".lore"))
					{ 
						l.add(lore.replace("&", "§"));
					}
					l.add(" ");
					
					if (time>=need)
					{
					   if (yml.getBoolean("礼包."+s))
					   {
						   i=new ItemStack(getconfig().getInt("礼包."+s+".yesid"),1,(short)getconfig().getInt("礼包."+s+".yesdata"));
						   
						   
						   l.add("§a§l你目前可领取该礼包."); 
					   }
					   else
						{
							i=new ItemStack(getconfig().getInt("礼包."+s+".noid"),1,(short)getconfig().getInt("礼包."+s+".nodata"));	
							 l.add("§c§l你今天已经领取过该礼包.");
						}
					}
					else
					{
						i=new ItemStack(getconfig().getInt("礼包."+s+".noid"),1,(short)getconfig().getInt("礼包."+s+".nodata"));	
						 l.add("§c§l你目前不可领取该礼包.");
					}
					id.setLore(l);
					i.setItemMeta(id);
					inv.setItem(slot, i); 
					
					
					
				}
				
				
			}
			
			
		}
		p.openInventory(inv);
		
		
	}
	public static YamlConfiguration getconfig()
	{
		File file=new File("./plugins/Time", "config.yml");
		YamlConfiguration yml=YamlConfiguration.loadConfiguration(file);
		return yml;
		
	}
	@EventHandler
	public void onI(InventoryClickEvent e)
	{
		
		if (e.getInventory().getTitle().contains("§d§l你的在线时间"))
			
		{
			e.setCancelled(true);
			Player p=(Player)e.getWhoClicked();
			
			if (e.getRawSlot()>=0&&e.getRawSlot()<=53)
			{
				
				File file=new File("./plugins/Time/data",p.getName()+".yml");
				YamlConfiguration yml=YamlConfiguration.loadConfiguration(file);
				int slot=e.getRawSlot();
			  	int time=yml.getInt("在线时间");
				if (getconfig().get("礼包."+slot)!=null)
				{
					int need=getconfig().getInt("礼包."+slot+".need");
					if (time>=need*60)
					{ 
						if (yml.getBoolean("礼包."+slot))
						{ 
							p.closeInventory();
							p.sendMessage(getconfig().getString("礼包."+slot+".message").replace("&", "§"));
							for (String cmd:yml.getStringList("礼包."+slot+".command"))
							{
								Bukkit.dispatchCommand(Bukkit.getConsoleSender(), cmd.replace("%player%", p.getName()).replace("&", "§"));
							}
							yml.set("礼包."+slot, false);
							try {
								yml.save(file);
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}
							
							
							
							
						}
						
						
						
					}
					
					
					
					
					
				}
				
				
				
				
				
				
			}
			
			
			
			
			
		}
		
		
		
	}
	@EventHandler
	public void onJ(PlayerJoinEvent e)
	{
		
		Calendar cal=Calendar.getInstance();
		int date=cal.get(Calendar.DATE);
		int month=cal.get(Calendar.MONTH);
		File file=new File("./plugins/Time/data",e.getPlayer().getName()+".yml");
		YamlConfiguration yml=YamlConfiguration.loadConfiguration(file);
		if (!file.exists())
		{
			yml.set("在线时间", 0);
			yml.set("日", date);
			yml.set("月", month); 
			ConfigurationSection sec=getconfig().getConfigurationSection("礼包");
			Set<String> k=sec.getKeys(false);
			for (String need:k)
			{
			yml.set("礼包."+need, true);
			try {
				yml.save(file);
			} catch (IOException e1) {
				// TODO 自动生成的 catch 块
				e1.printStackTrace();
			}
			
			}
		}
		else
		{
			
			ConfigurationSection sec=getconfig().getConfigurationSection("礼包");
			Set<String> k=sec.getKeys(false);
			
			for (String have:k)
			{
				if (yml.get("礼包."+have)==null)
				{
					yml.set("礼包."+have, true);
					try {
						yml.save(file);
					} catch (IOException e1) {
						// TODO 自动生成的 catch 块
						e1.printStackTrace();
					}
				}
			}
			
		    if (date!=yml.getInt("日")||(month!=yml.getInt("月")&&date==yml.getInt("日")))
		    {
		    	
		    	for (String need:k)
				{
				yml.set("礼包."+need, true);
				try {
					yml.save(file);
				} catch (IOException e1) {
					// TODO 自动生成的 catch 块
					e1.printStackTrace();
				}
				
				}
		    	
		    }
		}
		 
		
	}
}
